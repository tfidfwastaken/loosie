* LOOSIE
  
![loosie_mockup](https://user-images.githubusercontent.com/24277692/87395595-3e290800-c5cf-11ea-9ed5-409a6d9a0cc5.png)

Loosie is a convenient on-the-web document sharer.

Just upload an html, plaintext or pdf file and you'll receive a shareable link. These links will display the file directly on the browser without offering a file download (Support for automatic markdown file sharing shall be added later).

This project is came out of a need of mine where I wanted to quickly share loose html documents as links in a google-drive like fashion.

This has been designed to be self-deployable and I highly recommend using it in a decentralized fashion.

** Deploying your own loosie instance

I am providing instructions for Heroku (especially because it's free), but this application works anywhere as long as you can install [[https://download.racket-lang.org/][Racket]] and [[https://www.postgresql.org/download/][PostgreSQL]], and set the following environment variables:
#+BEGIN_EXAMPLE
DATABASE_URL=<your postgresql database url>
APP_URL=<your webapp url (without trailing slash)>
#+END_EXAMPLE

*** To deploy on Heroku

- Create your heroku account and create a new app (let's say you picked the name =foosie=)
- Clone this repository
#+BEGIN_EXAMPLE
git clone https://github.com/tfidfwastaken/loosie.git && cd loosie
#+END_EXAMPLE
- Link this repository to your app
#+BEGIN_EXAMPLE
heroku git:remote -a foosie
#+END_EXAMPLE
- Set up the Racket buildpack and Postgres addon on Heroku
#+BEGIN_EXAMPLE
heroku buildpacks:set https://github.com/lexi-lambda/heroku-buildpack-racket
heroku addons:create heroku-postgresql:hobby-dev
#+END_EXAMPLE
- Set the environment variables
#+BEGIN_EXAMPLE
heroku config:set RACKET_VERSION=7.7
heroku config:set APP_URL=https://foosie.herokuapp.com
#+END_EXAMPLE

And in five steps you have setup your own personal file sharing instance!

**** Example instance
https://loosi.herokuapp.com/ 

Example of a hosted file on my instance: \\
https://loosi.herokuapp.com/l/Ru9l6q2SpM9z (html version of this readme)

** A note on privacy
All the passphrase-protected data stored on a loosie instance is encrypted, and as long as you keep your passphrase a secret, even the instance owner cannot access it. So yes, this service is fairly secure. That said, be cautious when uploading sensitive documents to an instance and make sure you trust the instance owner, as a malicious actor can still host a fork that removes the security features provided in this code.
